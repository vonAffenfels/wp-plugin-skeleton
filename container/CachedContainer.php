<?php

namespace WP\Plugin\Skeleton;

use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\ContainerInterface;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\Container;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\Exception\LogicException;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\Exception\RuntimeException;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use WPPluginSkeleton_Vendor\Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class CachedContainer extends Container
{
    protected $parameters = [];

    public function __construct()
    {
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'kernel' => true,
            'plugin' => true,
        ];
        $this->methodMap = [
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page' => 'getPageService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post' => 'getPostService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\PostObjectManager' => 'getPostObjectManagerService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Request' => 'getRequestService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\PHTMLEngine' => 'getPHTMLEngineService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\TwigEngine' => 'getTwigEngineService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Functions\\BuiltIn\\Wordpress' => 'getWordpressService',
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\TemplateRenderer' => 'getTemplateRendererService',
            'adminajax.loader' => 'getAdminajax_LoaderService',
            'hook.loader' => 'getHook_LoaderService',
            'menu.loader' => 'getMenu_LoaderService',
            'postobject.extensionLoader' => 'getPostobject_ExtensionLoaderService',
            'restapi.loader' => 'getRestapi_LoaderService',
            'shortcode.loader' => 'getShortcode_LoaderService',
            'template.notice' => 'getTemplate_NoticeService',
        ];
        $this->aliases = [
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Kernel\\PluginKernel' => 'kernel',
            'WP\\Plugin\\Skeleton\\Plugin' => 'plugin',
            'template.renderer' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\TemplateRenderer',
        ];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            '.abstract.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page' => true,
            '.abstract.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post' => true,
            '.abstract.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\Notice' => true,
            '.abstract.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\TabbedPage' => true,
            '.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page.0.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page' => true,
            '.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post.0.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post' => true,
            '.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\Notice.0.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\Notice' => true,
            '.instanceof.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\TabbedPage.0.WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\TabbedPage' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\BaseWordpress' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Kernel\\Kernel' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Kernel\\WordpressKernel' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Plugin' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\Twig\\Extension' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\Twig\\FileLoader' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\FunctionHandler' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\NamespaceHandler' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\Notice' => true,
            'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Utils\\Templates\\Admin\\TabbedPage' => true,
        ];
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Page' service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Page
     */
    protected static function getPageService($container)
    {
        $container->factories['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page'] = function ($container) {
            return new \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Page();
        };

        return $container->factories['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page']($container);
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Post' service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Post
     */
    protected static function getPostService($container)
    {
        $container->factories['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post'] = function ($container) {
            return new \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\Post();
        };

        return $container->factories['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post']($container);
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\PostObjectManager' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\PostObjectManager
     */
    protected static function getPostObjectManagerService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\PostObjectManager'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\PostObjectManager(['page' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Page', 'post' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\PostObjects\\Post'], ($container->services['plugin'] ?? $container->get('plugin', 1)));
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\Request' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\Request
     */
    protected static function getRequestService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Request'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Request();
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\PHTMLEngine' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\PHTMLEngine
     */
    protected static function getPHTMLEngineService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\PHTMLEngine'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\PHTMLEngine(($container->privates['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\FunctionHandler'] ?? self::getFunctionHandlerService($container)));
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\TwigEngine' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\TwigEngine
     */
    protected static function getTwigEngineService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\TwigEngine'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\TwigEngine(new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\Twig\FileLoader(($container->privates['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\NamespaceHandler'] ??= new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\NamespaceHandler())), new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Engine\Twig\Extension(($container->privates['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\FunctionHandler'] ?? self::getFunctionHandlerService($container))));
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Functions\BuiltIn\Wordpress' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Functions\BuiltIn\Wordpress
     */
    protected static function getWordpressService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Functions\\BuiltIn\\Wordpress'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\Functions\BuiltIn\Wordpress();
    }

    /**
     * Gets the public 'WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\TemplateRenderer' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\TemplateRenderer
     */
    protected static function getTemplateRendererService($container)
    {
        return $container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\TemplateRenderer'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\TemplateRenderer(($container->services['plugin'] ?? $container->get('plugin', 1)), ($container->privates['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\NamespaceHandler'] ??= new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\NamespaceHandler()), ['phtml' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\PHTMLEngine', 'twig' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Engine\\TwigEngine']);
    }

    /**
     * Gets the public 'adminajax.loader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\AdminAjax\Loader
     */
    protected static function getAdminajax_LoaderService($container)
    {
        return $container->services['adminajax.loader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\AdminAjax\Loader(($container->services['kernel'] ?? $container->get('kernel', 1)), ($container->services['plugin'] ?? $container->get('plugin', 1)), [], ($container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\Request'] ??= new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Request()));
    }

    /**
     * Gets the public 'hook.loader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\Hook\Loader
     */
    protected static function getHook_LoaderService($container)
    {
        return $container->services['hook.loader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Hook\Loader(($container->services['kernel'] ?? $container->get('kernel', 1)), []);
    }

    /**
     * Gets the public 'menu.loader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\Menu\Loader
     */
    protected static function getMenu_LoaderService($container)
    {
        return $container->services['menu.loader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Menu\Loader(($container->services['kernel'] ?? $container->get('kernel', 1)), ($container->services['plugin'] ?? $container->get('plugin', 1)), ['top' => [], 'sub' => []]);
    }

    /**
     * Gets the public 'postobject.extensionLoader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\ExtensionLoader
     */
    protected static function getPostobject_ExtensionLoaderService($container)
    {
        return $container->services['postobject.extensionLoader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\PostObjects\ExtensionLoader(($container->services['kernel'] ?? $container->get('kernel', 1)), []);
    }

    /**
     * Gets the public 'restapi.loader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\RestAPI\Loader
     */
    protected static function getRestapi_LoaderService($container)
    {
        return $container->services['restapi.loader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\RestAPI\Loader(($container->services['kernel'] ?? $container->get('kernel', 1)), ($container->services['plugin'] ?? $container->get('plugin', 1)), []);
    }

    /**
     * Gets the public 'shortcode.loader' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\Shortcode\Loader
     */
    protected static function getShortcode_LoaderService($container)
    {
        return $container->services['shortcode.loader'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Shortcode\Loader(($container->services['kernel'] ?? $container->get('kernel', 1)), []);
    }

    /**
     * Gets the public 'template.notice' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\Utils\Templates\Admin\Notice
     */
    protected static function getTemplate_NoticeService($container)
    {
        return $container->services['template.notice'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\Utils\Templates\Admin\Notice(($container->services['plugin'] ?? $container->get('plugin', 1)), ($container->services['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\TemplateRenderer'] ?? self::getTemplateRendererService($container)), '@vaf-wp-framework/admin/notice');
    }

    /**
     * Gets the private 'WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\FunctionHandler' shared autowired service.
     *
     * @return \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\FunctionHandler
     */
    protected static function getFunctionHandlerService($container)
    {
        return $container->privates['WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\FunctionHandler'] = new \WPPluginSkeleton_Vendor\VAF\WP\Framework\TemplateRenderer\FunctionHandler(['wp_editor' => ['container' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Functions\\BuiltIn\\Wordpress', 'method' => 'wpEditor', 'serviceParams' => []], 'wp_nonce_field' => ['container' => 'WPPluginSkeleton_Vendor\\VAF\\WP\\Framework\\TemplateRenderer\\Functions\\BuiltIn\\Wordpress', 'method' => 'wpNonceField', 'serviceParams' => []]], ($container->services['kernel'] ?? $container->get('kernel', 1)));
    }

    public function getParameter(string $name): array|bool|string|int|float|\UnitEnum|null
    {
        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new ParameterNotFoundException($name);
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        throw new ParameterNotFoundException($name);
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.project_dir' => '/Users/friedrich/Documents/Projects/wp-plugin-skeleton',
            'kernel.debug' => true,
            'kernel.build_dir' => '/Users/friedrich/Documents/Projects/wp-plugin-skeleton/container',
            'kernel.container_class' => 'CachedContainer',
        ];
    }
}
